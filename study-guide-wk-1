Study Guide: Week 1
Hackbright is fast-paced and we throw a lot of information at you. We like to tell students that as long as they understand 80% of the material 80% of the time, they’re on the right track. But what does that actually mean?

Study guides — like this one! — will help you review the concepts from this week that are critical because you’ll use these ideas throughout the rest of the course.

We recommend that you review study guides at the end of every week. First, try to answer each of the questions without looking at your lecture notes. Then review the questions that you couldn’t answer. Make sure you note down topics that are still confusing to you and bring them up during advising or office hours.

----------------------------------------------------------------
Algorithms
- What is an algorithm? Give an example of an algorithm.
    An algorithm is a formula or set of instructions for solving a specific problem

- What is a heuristic? How do they relate to algorithms?
    Heuristics are additional logic taken into consideration by an algorithm to make it more efficient.

- In computer science, what does the term brute force mean?
    Brute force means an algorithm doesn't use any shortcuts to conserve time or memory, it just tries every option until it finds what it's looking for.

- What does API stand for?
    Application programming interface
----------------------------------------------------------------
Command Line & Shell
- How does a graphical user interace (GUI) differ from a command-line interface (CLI)?
    A GUI allows users to interact with the OS through clicking on graphics and icons on the screen. A CLI allows users to interact with the OS through typing commands directly into the terminal

- If someone asked to see your command line prompt, how would you show it to them?
    I would open the terminal and show them the username, laptop, and folder I'm located at.

- How can you tell the difference between a relative file path and an absolute file path?
   A relative filepath starts in the current directory, while an absolute filepath starts from the home directory and starts with a /.

- ~ is an alias for a certain directory. What is that directory?
    Home directory

- Here are some commands used for navigating the filesystem. What does each command do? Give an example of how you would use each command.
    - pwd: print working directory

    - cd: change directory

    - ls: list contents of directory

        We also showed you how to use ls with different arguments. You don’t have to remember exactly what they do — just be aware of them:

            - ls -a: list all contents, including hidden files

            - ls -l: gives additional info on the contents of the directory

            - ls -al: gives additional info on all contents including hidden files

- Here are some commands used for modifying files. What does each command do? Give an example of how you would use each one.

    - mkdir: make directory

    - mv: move or rename file

    - cp: copy

- What does Ctrl - d and Ctrl - c do in the terminal?
    ctrl - c cancels a process (stops a program). ctrl - d exits a program.

----------------------------------------------------------------
Using Vagrant
- What’s the name of the folder on your computer that’s shared with Vagrant?
    src
- Make sure you know when to use the following, Vagrant-related commands:

    - vagrant up

    - vagrant ssh

    - vagrant halt

----------------------------------------------------------------
Git
- In the context of using version control, what is a repository?
    A project kept under version control.

- In the context of using version control, what is a working directory?
    Your particular copy of a repository.

- Make sure you know how and when to use the following git commands:

    - git status: shows status of files in your working directory

    - git init: initializes an empty repo

    - git add: adds file to be tracked by git repo

    - git commit -am: commits all files that are being tracked and add commit message

    - git log: show log of all previous commits
    
----------------------------------------------------------------
Functions
- What is a function?

- What is a function signature?

- What does return do?

- All functions return something in Python. If you don’t override a function’s default return value in Python, what will the function return?

- What are optional parameters?

- How do you write a docstring?

- What is the difference between a function’s parameters and its arguments?

- What is the difference between defining a function and calling a function?

- We use the word scope to refer to values that a function can access or not. Can functions access values in their inner scope, their outer scope, or both?

© 2020 Hackbright Academy